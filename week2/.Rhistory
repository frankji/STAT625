#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('Total Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('Total Ba*thro*ms', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('Total Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:23707, myparse)
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg[length(reg)])
if(numonly == TRUE){
o<-as.numeric(gsub('[^0-9]', '', o))
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('Total Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('Total Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('Total Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:23707, myparse)
gsub('<>', '', c('<2>','<1>'))
gsub('[<>]', '', c('<2>','<1>'))
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-sum(as.numeric(gsub('[^0-9]', '', o)))
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+[</span>', numonly = TRUE)
beds<-myreg('Total Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('Total Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('Total Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
sum(c(1,NA))
?sum
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-sum(as.numeric(gsub('[^0-9]', '', o)), na.rm = TRUE)
}
return(o)
}
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-sum(as.numeric(gsub('[^0-9]', '', o)), na.rm = TRUE)
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('Total Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('Total Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('Total Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
x<-c(1,2,3,NA)
is.na(x)
all(is.na(x))
mysum<-function(x){
#Function to sum numbers if there are several buildings
if(all(is.na(x))){
return(NA)
}
else{
return(sum(x, na.rm = TRUE))
}
}
mysum<-function(x){
#Function to sum numbers if there are several buildings
if(all(is.na(x))){
return(NA)
}
else{
return(sum(x, na.rm = TRUE))
}
}
#Create the data.frame for the dataset
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-mysum(as.numeric(gsub('[^0-9]', '', o)), na.rm = TRUE)
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('Total Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('Total Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('Total Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
mysum<-function(x){
#Function to sum numbers if there are several buildings
if(all(is.na(x))){
return(NA)
}
else{
return(sum(x, na.rm = TRUE))
}
}
#Create the data.frame for the dataset
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-mysum(as.numeric(gsub('[^0-9]', '', o)))
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('Total Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('Total Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('Total Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-sum(as.numeric(gsub('[^0-9]', '', o)), na.rm = TRUE)
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('Total Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('Total Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('Total Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-sum(as.numeric(gsub('[^0-9]', '', o)), na.rm = TRUE)
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('To*t*al Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('To*ta*l Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('To*ta*l Half Baths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-sum(as.numeric(gsub('[^0-9]', '', o)), na.rm = TRUE)
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('To*t*al Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('To*ta*l Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('To*ta*l Half Ba*ths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-sum(as.numeric(gsub('[^0-9]', '', o)), na.rm = TRUE)
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('To*ta*l Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('To*ta*l Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('To*ta*l Half Ba*ths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
mysum<-function(x){
if(all(is.na(x))){
return(NA)
}
else{
sum(x, na.rm = TRUE)
}
}
#Create the data.frame for the dataset
info<-matrix(NA, nrow = 27307, ncol = 6)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval','bedrooms','bathrooms','halfbaths')
myreg<-function(pat, x, regpat, numonly=FALSE){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(KEYWORDS, LIST, REGPATTERN, NUMERIC)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr(regpat, x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
if(numonly == TRUE){
o<-mysum(as.numeric(gsub('[^0-9]', '', o)))
}
return(o)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
beds<-NA
baths<-NA
halfs<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x,'<span.*>.+</span>')
aval<-myreg('"MainContent_lblGenAppraisal"',x,'<span.*>.+</span>', numonly = TRUE)
beds<-myreg('To*ta*l Be*dro*ms', x, '<td>.+</td>', numonly = TRUE)
baths<-myreg('To*ta*l Ba*thr*o*m*s', x, '<td>.+</td>', numonly = TRUE)
halfs<-myreg('To*ta*l Half Ba*ths', x, '<td>.+</td>', numonly = TRUE)
}
#Assign value to info
info[i,]<<-c(i, loc, aval, beds, baths, halfs)
}
sapply(1:27307, myparse)
#Tranform the format of numeric values
tonum<-function(x, trans){
#Funtion to transform 'trans' columns of x
#Usage tonum(DATA, COLUMNS)
for(i in trans){
x[,i]<-as.numeric(x[,i])
}
return(x)
}
info<-tonum(info, c(1,3,4,5,6))
setwd("~/Courses/STAT625/week2")
write.csv(x = info, file = 'hw1.csv', quote = FALSE, row.names = FALSE)
info$pid
info$bedrooms
