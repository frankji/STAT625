paste(1,'.html')
scan(1.html)
scan('1.html')
?scan
scan(file = '1.html')
scan(file = '1.html', what='', sep='\n')
x<-scan(file = '1.html', what='', sep='\n')
?grep
grep('parcel_id',x)
grep('PID',x)
x[grep('PID',x)]
x[grep('pid',x)]
x[grep('Parcel',x)]
grep('Parcel.+pid',x)
x[grep('Parcel.+pid',x)]
x[grep('Parcel\.aspx?pid',x)]
x[grep('Parcel\.aspx\?pid',x)]
x[grep('Parcel.aspx?pid',x)]
x[grep('Parcel\\.aspx\\?pid',x)]
x<-scan(file='10000.html', what='', sep='\n')
x[grep('Parcel\\.aspx\\?pid',x)]
txt <- "aaa12xxx"
regmatches(txt,regexpr("[0-9]+",txt))
?rregmatches
?regmatches
regmatches(x,'Parcel\\.aspx\\?pid')
x
pidl<-grep('Parcel\\.aspx\\?pid',x)
pidl
regmatches(x[pidl],'Parcel\\.aspx\\?pid')
regmatches(x[pidl],regexpr('Parcel\\.aspx\\?pid'))
x <- c("A and B", "A, B and C", "A, B, C and D", "foobar")
pattern <- "[[:space:]]*(,|and)[[:space:]]"
regmatches(x[pidl],regexpr('Parcel\\.aspx\\?pid',x[pidl])
)
x[pidl]
pidl<-grep('Parcel\\.aspx\\?pid',x)
pidll
pidl
x
fname='1.html'
x<-scan(file=fname, what='', sep='\n')
x<-scan(file=fname, what='', sep='\n')
pidl<-grep('Parcel\\.aspx\\?pid',x)
regmatches(x[pidl],regexpr('Parcel\\.aspx\\?pid',x[pidl])
)
regmatches(x[pidl],regexpr('Parcel\\.aspx\\?pid=([0-9]+)',x[pidl])
)
regmatches(x[pidl],regexpr('Parcel\\.aspx\\?pid=([0-9]+)',x[pidl]))
?regexpr
regmatches(x[pidl],regexpr('Parcel\\.aspx\\?pid=([0-9]+)',x[pidl],perl=TRUE))
?sub
strsplit("Parcel.aspx?pid=1",split = '=' )
strsplit("Parcel.aspx?pid=1",split = '=' )[[1]][2]
locln<-grep('MainContent_lblLocation',x)
loc<-gsub('<[^<>]*>','',x[locln])
loc
locln<-grep('MainContent_lblLocation',x)
loc<-gsub('<[^<>]*>','\\1',x[locln])
loc
x[locln]
?trimws
loc<-gsub('<[^<>]*>','',trimws(x[locln]))
loc
myreg<-function(pat, x){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(PATTERN, LIST)
#Get the line with the string and extract it
ln<-grep(pat,x)
#Remove useless characters and white space
o<-gsub('<[^<>]*>','',trimws(x[locln]))
}
myreg<-function(pat, x){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(PATTERN, LIST)
#Get the line with the string and extract it
ln<-grep(pat,x)
#Remove useless characters and white space
o<-gsub('<[^<>]*>','',trimws(x[locln]))
return(o)
}
myreg<-function(pat, x){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(PATTERN, LIST)
#Get the line with the string and extract it
ln<-grep(pat,x)
#Remove useless characters and white space
o<-gsub('<[^<>]*>','',trimws(x[ln]))
return(o)
}
myreg('MainContent_lblLocation',x)
aval<-myreg('Appraised Value',x)
aval
myreg('Appraised Value',x)
myreg<-function(pat, x){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(PATTERN, LIST)
#Get the line with the string and extract it
ln<-grep(pat,x)
reg<-regmatches(x[ln], regexpr('<span.*>.+</span>'))
#Remove useless characters and white space
o<-gsub('<[^<>]*>','',reg))
return(o)
}
myreg<-function(pat, x){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(PATTERN, LIST)
#Get the line with the string and extract it
ln<-grep(pat,x)
reg<-regmatches(x[ln], regexpr('<span.*>.+</span>', x[ln]))
#Remove useless characters and white space
o<-gsub('<[^<>]*>','',reg)
return(o)
}
myreg('Appraised Value',x)
as.numeric(myreg('Appraised Value',x))
1+1
aval<-as.numeric(sub('\\$','',aval))
aval
setwd('~')
aval<-as.numeric(sub('\\$','',aval))
aval
aval<-myreg('Appraised Value',x)
aval
aval<-as.numeric(gsub('[^0-9]','',aval))
aval
?data.frame
?"matrix"
?as.data.frame
as.data.frame(matrix(nrow=27307, ncol =3),
col.names = c('pid','location','totval'))
regmatches('sadsfsa',regexpr('3213','sadsfsa'))
class(regmatches('sadsfsa',regexpr('3213','sadsfsa')))
grep('fdsafd','fdsagds')
length(grep('fdsafd','fdsagds'))
myreg<-function(pat, x){
#Function to retrieve string from a list of strings in html
#Only for pid location totval
#Usage: myreg(PATTERN, LIST)
#Get the line with the string and extract it
ln<-grep(pat,x)
if(length(ln) == 0){
return(NA)
}
reg<-regmatches(x[ln], regexpr('<span.*>.+</span>', x[ln]))
#Remove useless characters
o<-gsub('<[^<>]*>','',reg)
return(o)
}
info<-as.data.frame(matrix(nrow=27307, ncol =3),
col.names = c('pid','location','totval'))
setwd('~/Courses/STAT625/week1/HW1/VisionAppraisal/newdata2016/')
?sapply
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n')
loc<-myreg('MainContent_lblLocation',x)
aval<-myreg('MainContent_lblGenAppraisal',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
}
sapply(1:10, myparse)
i=1
fname<-paste(i, '.html', sep = '')
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n')
loc<-myreg('MainContent_lblLocation',x)
aval<-myreg('MainContent_lblGenAppraisal',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
loc<-myreg('MainContent_lblLocation',x)
aval<-myreg('MainContent_lblGenAppraisal',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
loc
aval
aval<-myreg('MainContent_lblGenAppraisal',x)
aval
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n')
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
}
sapply(1:10, myparse)
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
info[i,1]<-i
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n')
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
}
sapply(1:27303, myparse)
?scan
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
info[i,1]<-i
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quite=TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
}
sapply(1:27303, myparse)
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
info[i,1]<-i
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
}
sapply(1:27303, myparse)
View(info)
sapply(1:10, myparse)
sapply()
?sapply
sapply(c(1,2,3),function(i){print(i)})
i=2
fname<-paste(i, '.html', sep = '')
info[i,1]<-i
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
View(info)
i=1
fname<-paste(i, '.html', sep = '')
info[i,1]<-i
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
info[i,2]<-loc
info[i,3]<-aval
}
sapply(1:10, myparse)
c<-c()
sapply(1:10, function(i){c<-c(c,i)})
c
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
}
return(c(i, loc, aval))
}
sapply(1:10, myparse)
info<-sapply(1:27307, myparse)
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
}
print(i)
return(c(i, loc, aval))
}
info<-sapply(1:27307, myparse)
1000 %% 10
1000 % 10
1000 % 11
1000 %% 11
12 %% 11
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
}
if(i %% 1000 == 0){
print(i)
}
return(c(i, loc, aval))
}
info<-sapply(1:27307, myparse)
info
info<-sapply(1:10, myparse)
View(info)
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
aval<-as.numeric(gsub('[^0-9]','',aval))
}
if(i %% 1000 == 0){
print(i)
}
return(c(i, loc, aval))
}
info<-sapply(1:10, myparse)
View(info)
info<-sapply(1:23707, myparse)
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
#Transform aval into numeric
aval<-as.numeric(gsub('[^0-9]','',aval))
}
if(i %% 1000 == 0){
print(i)
}
return(c(i, loc, aval))
}
info<-sapply(1:23707, myparse)
info<-sapply(1:27307, myparse)
info'
''
t(info)
?as.data.frame
info<-as.data.frame(t(info), stringsAsFactors = FALSE)
info$V3
info$V3[9963]
colnames(info)<-c('pid', 'location', 'totval')
?matrix
info<-matrix(NA, nrow = 27307, ncol = 3)
info<-as.data.frame(matrix, col.names = c('pid', 'location', 'totval'))
info<-matrix(NA, nrow = 27307, ncol = 3)
info<-as.data.frame(info, col.names = c('pid', 'location', 'totval'))
info
info$V1
?as.data.frame
info<-matrix(NA, nrow = 27307, ncol = 3)
info<-as.data.frame(info, col.names = c('pid', 'location', 'totval'))
colnames(info)
info<-matrix(NA, nrow = 27307, ncol = 3)
info<-as.data.frame(info)
colnames(info)<-c('pid','location','totval')
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
#Transform aval into numeric
aval<-as.numeric(gsub('[^0-9]','',aval))
}
info[i,]<<-c(i, loc, aval)
}
myparse<-function(i){
#Function to parse htmls and retrieve information
#Only for sapply
fname<-paste(i, '.html', sep = '')
loc<-NA
aval<-NA
#Read files when they exist
if(file.exists(fname)){
x<-scan(file=fname, what='', sep='\n', quiet = TRUE)
loc<-myreg('"MainContent_lblLocation"',x)
aval<-myreg('"MainContent_lblGenAppraisal"',x)
#Transform aval into numeric
aval<-as.numeric(gsub('[^0-9]','',aval))
}
info[i,]<<-c(i, loc, aval)
}
info<-sapply(1:27307, myparse)
View(info)
sapply(1:27307, myparse)
?apply
info$totval
info$pid
loc
aval
info[1,1]
info[1,1]<-1
info[1,1]
info$pid<-as.numeric(info$pid)
info$totval<-as.numeric(info$totval)
info$pid
info$totval
info[600,]
info[600,2]
?write.csv
write.csv(x = info, file = hw1.csv, sep = ',', row.names = FALSE)
write.csv(x = info, file = 'hw1.csv', row.names = FALSE)
write.csv(x = info, file = 'hw1.csv', quote = FALSE, row.names = FALSE)
